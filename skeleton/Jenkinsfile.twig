pipeline {
  agent { label "jenkins-jnlp-ws" }
  environment {
    MY127WS_KEY = credentials('{{ @('app.name') }}-my127ws-key')
    MY127WS_ENV = "jenkins"
  }
  stages {
    stage('build') {
      steps {
        script {
            version = sh(returnStdout: true, script: 'git rev-parse HEAD')
        }  
        sh '''#!/bin/bash
          ws harness download
          ws harness prepare
          ws app build
        '''
      }
    }
    stage('test') {
      agent {
        kubernetes {
          label 'ci-{{ @('app.name') }}'
          yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
    - { name: chrome,  image: yukinying/chrome-headless-browser:latest }
    - { name: mysql,   image: mysql:5.7 }
    - { name: redis,   image: redis:4-alpine }
    - { name: console, image: {{ @('app.docker.repository') }}-console:${version} }
    - { name: nginx,   image: {{ @('app.docker.repository') }}-nginx:${version} }
    - { name: php-fpm, image: {{ @('app.docker.repository') }}-php-fpm:${version} }
"""
        }
      }
      parallel {
        stage('quality') {
          agent { label "ci-{{ @('app.name') }}" }
          steps { 
            container('console') { sh 'composer test-quality' }
          }
        }
        stage('unit') { 
          agent { label "ci-{{ @('app.name') }}" }
          steps { 
            container('console') { sh 'composer test-unit' }
          }
        }
        stage('acceptance') { 
          agent { label "ci-{{ @('app.name') }}" }
          steps { 
            container('console') { sh 'composer test-acceptance' }
          }
        }
      }
    }
  }
}
